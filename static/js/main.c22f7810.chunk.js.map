{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","questions","setQuestions","activeIndex","setActiveIndex","activeQuestion","note","setNote","checkedKeywords","setCheckedKeywords","showKeywords","setShowKeywords","wordCount","setWordCount","charsCount","setCharsCount","userId","setUserId","undefined","countDown","setCountDown","isInteractWithDOM","setIsInteractWithDOM","results","setResults","audioRef","useRef","useEffect","axios","get","process","then","res","data","catch","err","console","log","index","localStorage","getItem","parseInt","setItem","setTimeout","bodyEl","document","querySelector","buttons","querySelectorAll","addEventListener","forEach","button","myTimeout","myInterval","clearTimeout","current","clearInterval","setInterval","prev","audio","play","error","className","length","id","disabled","onClick","prevIndex","map","item","ref","autoPlay","autoPlayAfterSrcChange","volume","src","style","color","fontWeight","placeholder","value","onChange","e","text","target","spaces","match","count","marginRight","htmlFor","type","questionKeywords","keywords","split","inputKeywords","word","replace","toLowerCase","matchingKeywords","includes","push","join","payload","FormData","append","post","result","context","grammar","spelling","form","marks","dangerouslySetInnerHTML","__html","description","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c22f7810.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport ReactAudioPlayer from 'react-h5-audio-player';\nimport 'react-h5-audio-player/lib/styles.css';\nimport './App.scss';\n\nconst App = () => {\n\tconst [questions, setQuestions] = useState([]);\n\tconst [activeIndex, setActiveIndex] = useState(0);\n\tconst activeQuestion = questions[activeIndex];\n\tconst [note, setNote] = useState('');\n\tconst [checkedKeywords, setCheckedKeywords] = useState('');\n\tconst [showKeywords, setShowKeywords] = useState(false);\n\tconst [wordCount, setWordCount] = useState(0);\n\tconst [charsCount, setCharsCount] = useState(0);\n\tconst [userId, setUserId] = useState(1299);\n\tconst [countDown, setCountDown] = useState(undefined);\n\tconst [isInteractWithDOM, setIsInteractWithDOM] = useState(false);\n\tconst [results, setResults] = useState(null);\n\n\tconst audioRef = useRef(null);\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(process.env.REACT_APP_JSON)\n\t\t\t.then((res) => setQuestions(res.data))\n\t\t\t.catch((err) => console.log(err));\n\t}, []);\n\n\tuseEffect(() => {\n\t\tlet index = localStorage.getItem('active_question_index');\n\n\t\tif (index) {\n\t\t\tsetActiveIndex(parseInt(index));\n\t\t}\n\t}, []);\n\n\tconst checkKeywords = () => {\n\t\tconst questionKeywords = questions[activeIndex].keywords.split(' ');\n\t\tconst inputKeywords = note.split(' ').map((word) => word.replace(/[^\\w\\s]/gi, '').toLowerCase());\n\n\t\tlet matchingKeywords = [];\n\n\t\tfor (let word of questionKeywords) {\n\t\t\tlet matched = inputKeywords.includes(word);\n\n\t\t\tif (matched) {\n\t\t\t\tword = `<span class=\"matched-keyword green\">${word}</span>`;\n\t\t\t} else {\n\t\t\t\tword = `<span class=\"unmatched-keyword red\">${word}</span>`;\n\t\t\t}\n\t\t\tmatchingKeywords.push(word);\n\t\t}\n\t\tsetCheckedKeywords(matchingKeywords.join(' '));\n\t\tsetShowKeywords(true);\n\n\t\tlet payload = new FormData();\n\t\tpayload.append('question_id', activeQuestion.id);\n\t\tpayload.append('question_cat', 17);\n\t\tpayload.append('word_count', wordCount);\n\t\tpayload.append('user_string', note);\n\t\tpayload.append('user_id', userId);\n\n\t\taxios\n\t\t\t.post('https://api.masterpte.com.au/api/webservices/practice_result_listening', payload)\n\t\t\t.then((res) => setResults(res.data.result))\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\tuseEffect(() => {\n\t\tsetResults(null);\n\t\tsetNote('');\n\t\tsetCheckedKeywords('');\n\t\tsetShowKeywords(false);\n\t\tlocalStorage.setItem('active_question_index', activeIndex);\n\t}, [activeIndex]);\n\n\tuseEffect(() => {\n\t\tsetTimeout(() => {\n\t\t\tconst bodyEl = document.querySelector('body');\n\t\t\tconst buttons = document.querySelectorAll('button');\n\n\t\t\tbodyEl.addEventListener('click', () => setIsInteractWithDOM(true));\n\n\t\t\tbuttons.forEach((button) => {\n\t\t\t\tbutton.addEventListener('click', () => setIsInteractWithDOM(true));\n\t\t\t});\n\t\t}, 1000);\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tlet myTimeout = useRef();\n\n\tlet myInterval = useRef();\n\n\tuseEffect(() => {\n\t\tif (isInteractWithDOM) {\n\t\t\tclearTimeout(myTimeout.current);\n\t\t\tclearInterval(myInterval.current);\n\n\t\t\tsetCountDown(6);\n\n\t\t\tmyInterval.current = setInterval(() => {\n\t\t\t\tsetCountDown((prev) => prev - 1);\n\t\t\t}, 1000);\n\n\t\t\ttry {\n\t\t\t\tmyTimeout.current = setTimeout(() => {\n\t\t\t\t\taudioRef.current.audio.current.play();\n\t\t\t\t\tclearInterval(myInterval.current);\n\t\t\t\t}, 6000);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t}\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [activeIndex]);\n\n\tconst handleOnChange = (e) => {\n\t\tlet text = e.target.value;\n\t\tlet spaces = text.match(/\\S+/g);\n\t\tlet count = spaces ? spaces.length : 0;\n\t\tsetWordCount(count);\n\t\tsetCharsCount(text.length);\n\t\tsetNote(text);\n\t};\n\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"sidebar\">\n\t\t\t\t\t<h1 className=\"app-title\">PTE Summarize Spoken Text</h1>\n\t\t\t\t\t{questions?.length > 0 && (\n\t\t\t\t\t\t<div id=\"pagination\" className=\"pagination\">\n\t\t\t\t\t\t\t<div className=\"pagination-top\">\n\t\t\t\t\t\t\t\t<button className=\"btn-prev\" disabled={activeIndex === 0} onClick={() => activeIndex > 0 && setActiveIndex((prevIndex) => prevIndex - 1)}>\n\t\t\t\t\t\t\t\t\tPrevious\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<span className=\"active-question-number\">{activeIndex + 1}</span>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName=\"btn-next\"\n\t\t\t\t\t\t\t\t\tdisabled={activeIndex === questions.length - 1}\n\t\t\t\t\t\t\t\t\tonClick={() => activeIndex < questions.length && setActiveIndex((prevIndex) => prevIndex + 1)}>\n\t\t\t\t\t\t\t\t\tNext\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"pagination-bottom\">\n\t\t\t\t\t\t\t\t{questions.map((item, index) => (\n\t\t\t\t\t\t\t\t\t<button className={activeIndex === index ? 'active' : ''} key={index} onClick={() => setActiveIndex(index)}>\n\t\t\t\t\t\t\t\t\t\t{index + 1}\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"main-content\">\n\t\t\t\t\t{questions.length > 0 && (\n\t\t\t\t\t\t<div className=\"question\">\n\t\t\t\t\t\t\t<div className=\"description\">\n\t\t\t\t\t\t\t\tYou will hear a short lecture. Write a summary for a fellow student who was not present at the lecture. You should write 50 - 70 words. You have\n\t\t\t\t\t\t\t\t10 minutes to finish this task. Your response will be judged on the quality of your writing and on how well your response presents the key\n\t\t\t\t\t\t\t\tpoints presented in the lecture.\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"audio-player\">\n\t\t\t\t\t\t\t\t<ReactAudioPlayer ref={audioRef} autoPlay={false} autoPlayAfterSrcChange={false} volume src={activeQuestion.audio} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={`count-down ${countDown === 0 ? 'hidden' : ''}`}>\n\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\tThe audio will play after <span style={{ color: '#F8176D', fontWeight: 'bold' }}>{countDown ? countDown : 'x'}</span> seconds\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<textarea placeholder=\"Enter text...\" className=\"text-note\" value={note} onChange={handleOnChange}></textarea>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<div className=\"word-user-input\">\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<span style={{ marginRight: '3rem' }}>\n\t\t\t\t\t\t\t\t\t\tWords: <span style={{ color: '#F8176D', fontWeight: 'bold' }}>{wordCount}</span>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\tChars: <span style={{ color: '#F8176D', fontWeight: 'bold' }}>{charsCount}</span>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"user-id-input\">\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"user-id\">User ID: </label>\n\t\t\t\t\t\t\t\t\t<input id=\"user-id\" type=\"text\" value={userId} onChange={(e) => setUserId(e.target.value)} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button className=\"btn-check-keywords\" onClick={checkKeywords} disabled={note === ''}>\n\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t\t{results && (\n\t\t\t\t\t\t\t\t<div className=\"results\">\n\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\tContent: <span style={{ color: '#F8176D', fontWeight: 'bold' }}>{results.context}/2</span>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\tGrammar: <span style={{ color: '#F8176D', fontWeight: 'bold' }}>{results.grammar}/2</span>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\tSpelling: <span style={{ color: '#F8176D', fontWeight: 'bold' }}>{results.spelling}/2</span>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\tForm: <span style={{ color: '#F8176D', fontWeight: 'bold' }}>{results.form}/2</span>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\tMarks: <span style={{ color: '#F8176D', fontWeight: 'bold' }}>{results.marks}/90</span>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t{showKeywords && (\n\t\t\t\t\t\t\t\t<div className=\"question-box\">\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tclassName={`question-transcripts ${showKeywords ? 'keywords-showed' : ''}`}\n\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{ __html: activeQuestion.description }}></div>\n\t\t\t\t\t\t\t\t\t<div className=\"question-keywords\">\n\t\t\t\t\t\t\t\t\t\t<b>Keywords:</b> <div className=\"keywords-list\" dangerouslySetInnerHTML={{ __html: checkedKeywords }}></div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}